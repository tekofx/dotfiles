(defwidget poweroff []
  (button :onclick "systemctl poweroff"
    (box :orientation "v" :space-evenly "false" :class "square-button"
      (box :class "poweroff" "")
    )))

(defwidget reboot []
  (button :onclick "systemctl reboot"
    (box :orientation "v" :space-evenly "false" :class "square-button"
      (box :class "reboot" " ")
    )))

(defwidget logout []
  (button :onclick "bspc quit"
    (box :orientation "v" :space-evenly "false" :class "square-button"
      (box :class "logout" "")
    )))

(defwidget lock []
  (button :onclick "lock"
    (box :orientation "v" :space-evenly "false" :class "square-button"
      (box :class "lock" "")
    )))

(defwidget profile []
  (box :orientation "v" :space-evenly "false" :class "profile-box"
    (image :path "images/profile.png" :image-width 120 :image-height 120 :class "profile-picture")
    (box :orientation "v" :space-evenly "false" :class "profile-info"
      (label :text "Teko" :class "profile-name" :limit-width 20)
      (label :text "@tekofx" :class "profile-username" :limit-width 20)
    )
  )
)

(defwidget time []
  (box :orientation "v" :space-evenly "false" :class "hour-box"
    (label :text {hour} :class "hour-text" :limit-width 20)
    (label :text {minute} :class "minute-text" :limit-width 20)
  )
)

(defwidget date []
  (box :orientation "v" :space-evenly "false" :class "date-box"
    (label :text {date} :class "date-text" :limit-width 20)
  )
)


; vars
(defpoll hour :interval "1s"  "date '+%H'")
(defpoll minute :interval "1s"  "date '+%M'")
(defpoll date :interval "1s"  "date '+%d/%m/%Y'")


(defwindow poweroff
  :geometry (geometry :x "10px" :y "50px" :width "60px" :height "60px")
  (poweroff))

(defwindow reboot
  :geometry (geometry :x "10px" :y "120px" :width "60px" :height "60px")
  (reboot))

(defwindow logout
  :geometry (geometry :x "80px" :y "50px" :width "60px" :height "60px")
  (logout))

(defwindow lock
  :geometry (geometry :x "80px" :y "120px" :width "60px" :height "60px")
  (lock))

(defwindow profile
  :geometry (geometry :x "150px" :y "50px" :width "200px" :height "200px")
  (profile))

(defwindow time
  :geometry (geometry :x "90%" :y "5%" :width "190px" :height "120px")
  (time))

(defwindow date
  :geometry (geometry :x "90%" :y "20%" :width "190px" :height "86px")
  (date))
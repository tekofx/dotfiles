(defpoll time :interval "20s"
`/home/$USER/.config/eww/scripts/time`)

(defpoll battery :interval "30s"
`/home/$USER/.config/eww/scripts/battery`)


(defpoll wifi :interval "3s"
`/home/$USER/.config/eww/scripts/wifi`)


(deflisten workspaces :initial "[]" "bash ~/.config/eww/scripts/get-workspaces")
(deflisten current_workspace :initial "1" "bash ~/.config/eww/scripts/get-active-workspace")

(defvar current-brightness "󰃠  0%")
(defvar current-volume "  0%")

(defwindow bar
  :monitor 0
  :windowtype "dock"
  :geometry (geometry
    :width "1920px"
    :height "30px"
    :anchor "top center"
  )
  :exclusive true
  
  (box :class "main-container"
    
    (eventbox :onscroll "bash ~/.config/eww/scripts/change-active-workspace {} ${current_workspace}" :class "workspaces-widget"
      (box :class "workspaces" :halign "start" :space-evenly false
        (for workspace in workspaces
          (eventbox :onclick "hyprctl dispatch workspace ${workspace.id}"
            (box :class "workspace-entry ${workspace.windows > 0 ? 'occupied' : 'empty'} workspace-entry ${workspace.id == current_workspace ? 'current' : ''}"
              (label :text "${workspace.id}" )
            )
          )
        )
      )
    )
    
    (box :halign "end" :space-evenly "false"
      
      (systray :class "tray_element")
      (box :class "tray_element" "${wifi}")
      (box :class "tray_element" "${current-volume}")
      (box :class "tray_element" "${current-brightness}")
      (box :class "tray_element" "${battery}")
      (box :class "tray_element" "${time}")
      
    )
    
    
    
    
  )
)


(defwindow info
  
  :monitor 0
  :windowtype "normal"
  :geometry (geometry
    :width "60%"
    :height "40%"
    :anchor "center"
  )
  
  (box :class "main-container"
    
    (button :onclick "eww close info" :class "close-button" "X")
    
    (box :halign "start" :space-evenly "false"
      (label :class "info" "This is a test")
    )
    
    (box :halign "end" :space-evenly "false"
      (label :class "info" "This is a test")
    )
  )
)



(defvar brightness-value "0")


(defwindow brightness-widget
  :monitor 0
  :windowtype "normal"
  :geometry (geometry
    :anchor "center"
  )
  
  (box
    (label :text "${current-brightness}")
  )
)

(defvar volume-value "0")

(defwindow volume-widget
  :monitor 0
  :windowtype "normal"
  :geometry (geometry
    :anchor "center"
  )
  
  (box
    (box :halign "center" :space-evenly "false"
      (label :text "${current-volume}")
    )
  )
)